(page "index.html"
  (:import [goog.string.format])
  (:require
    [clicker.engine :as e]
    [clicker.util :as u]
    [clojure.string :as string]
    [goog.string :as gstring]
    [goog.string.format]
    [dao.dao :as dao]
    [ui.buttons :as buttons]
    [ui.levels :as levels]))

(defc state u/default-state)
(defc= add-every (get-in state [:values :add-every] 0))

(defn game-loop []
  (do
    (e/click state :change-fn (fn [m] (+ m @add-every)))
    (dao/put-state @state #())))

(dosync
  (dao/init-db)
  (js/setTimeout
    (fn []
      (do
        (dao/get-state "init" #(reset! state %))))
    500)
  (js/setInterval game-loop 1000))

(defc god true)
(defn level-value-fn [n]
  (+
    (Math/pow n 4)
    (* 10 n)))

; sentinels
(defc= clicks (gstring/format "%.0f" (get-in state [:values :clicks] 0)))
(defc= add-every-fmt (gstring/format "%.2f" add-every))
(defc= money (gstring/format "%.2f" (get-in state [:values :money] 0)))
(defc= state-str (with-out-str (cljs.pprint/pprint state)))
(defc= has-started (e/has-started? state))

(html
  (head
    (link :href "app.css" :rel "stylesheet" :type "text/css"))
  (body

    (if-tpl has-started

      (div

        (h3 clicks " words")
        (button :click #(e/click state) "Write a word")
        ; (button :click (fn [] (dao/get-state "init" #(u/log "got result " %))) "get db")

        (h5 "$" money " income")
        (h5 "Creativity boost of " add-every-fmt " words every second")

        (if-tpl god
          (div
           (for [level (range 6)]
             (let [n (level-value-fn level)]
               (button :click #(e/click state :change-fn (fn [m] (+ m n))) n)))))

        (div :class "wrapper"
          (buttons/tool-list :state state)
          (buttons/product-list :state state))
        (buttons/item-list :state state :group :product-level)
        (buttons/item-list :state state :group :tool-level))

      (div
        (button "Start" :click #(e/tap state :genesis))))

      ; (levels/product-levels :state state)
      ; (levels/tool-levels :state state))

    (if-tpl god
      (div :class "debug"
        (h4 "State")
        (pre state-str)))))

