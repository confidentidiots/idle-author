(page "index.html"
  (:require
    [data.index :as d]))

(def limit (Math/min (count d/upgrades) (count d/products)))

(defc god true)
(defc clicks 0)
(defc add-every 0)
(defc sales 0)
(defc levels (range 1 limit))

(defn level-value-fn [n]
  (+
    (Math/pow n 4)
    (* 10 n)))
(defn cost [n] (* 10 n))

(js/setInterval #(swap! clicks (fn [m] (+ m @add-every))) 1000)

; upgrade: add-every go up by value in upgrade lookup
;       sales go down by the value of the key in the upgrade lookup
(defelem upgrade-btn
  [{:keys [level value]} kids]
  (let [text (d/upgrades level)
      func #(swap! add-every (fn [m] (+ m level)))
      func2 #(swap! sales (fn [m] (- m value)))
      func-all (fn [] (func) (func2))]
    ((button :click func-all) (str text " ($" value ")") kids)))

; sell: sales go up by value in sales lookup
;       words go down by the value of the key in the sales lookup
(defelem sell-btn
  [{:keys [level out in]} kids]
  (let [text (d/products level)
      func #(swap! sales (fn [m] (+ m in)))
      func2 #(swap! clicks (fn [m] (- m out)))
      func-all (fn [] (func) (func2))]
    ((button :click func-all) (str text " (" out " words @ $" in ")" ) kids)))

(html
  (head
    ; (link :href "app.css" :rel "stylesheet" :type "text/css")
    )
  (body
    (h3 clicks " words")
    (h3 "$" sales " income")
    (h5 add-every " added every second")
    
    (button :click #(swap! clicks inc) "Write a word")

    (if-tpl god
      (div
      (for-tpl [level levels]
        (let [n (level-value-fn @level)]
          (button :click #(swap! clicks (fn [m] (+ m n))) n)))))
    
    (h4 "Upgrade")
    (for-tpl [level levels]
      (let [value (cost @level)]
        (div
          (cell=
            (if (< value sales)
              (p (upgrade-btn :level level :value value)))))))

    (h4 "Sell")
    (for-tpl [level levels]
      (let [out (level-value-fn @level)
          in (cost @level)]
        (div
          (cell=
            (if (<= out clicks)
              (p (sell-btn :level level :out out :in in  )))))))

    (h4 "Upgrades")
    (table
      (thead
        (tr
          (td "Name")
          (td "Cost")
          (td "Bump")))
      (tbody
    (for-tpl [level levels]
      (let [level-exp (level-value-fn level)
            text (d/upgrades @level)
            price (cost @level)]
          (tr
            (td text)
            (td price)
            (td level " every second"))))))

    (h4 "Sell")
    (table
      (thead
        (tr
          (td "Name")
          (td "Clicks")
          (td "Cash")))
      (tbody
    (for-tpl [level levels]
      (let [level-exp (level-value-fn @level)
            text (d/products @level)
            price (cost @level)]
          (tr
            (td text)
            (td level-exp)
            (td price))))))

    ))
