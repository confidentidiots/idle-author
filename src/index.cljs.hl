(page "index.html"
  (:import [goog.string.format])
  (:require
    [clicker.engine :as e]
    [data.db :as d]
    [clojure.string :as string]
    [goog.string :as gstring]
    [goog.string.format]))

(defc state { :clicks 0})
(defc god true)
(defn level-value-fn [n]
  (+
    (Math/pow n 4)
    (* 10 n)))

; sentinels
(defc= clicks (:clicks state))
(defc= add-every (:add-every state))
(defc= money (gstring/format "%.2f" (:money state 0)))
; (defc= sell-log (:things state))
; (defc= upgrade-log (:things state)) ; TODO maybe just a single log

; (js/setInterval #(e/click (fn [m] (+ m @add-every))) 1000)

(defelem sell-buttons [kids]
  (for [product (get-in d/data [:product :items])]
    (do
      (let [name (product :name)
            loss (product :cost)
            gain (cell= (gstring/format "%.2f" (e/next-gain state name)))
            count (cell= (e/count state name))
            click-fn #(e/tap state name)
            disabled (cell= (not (e/can-tap? state name)))]

       (tr
         (td name)
         (td loss)
         (td "$" gain)
         (td count)
         (td (button :disabled disabled :click click-fn "Sell" kids)))))))

(html
  (head
    (link :href "app.css" :rel "stylesheet" :type "text/css"))
  (body
    (h3 clicks " words")
    (h3 "$" money " income")
    (h5 "Creativity boost of " add-every " words every second")

    (button :click #(e/click state) "Write a word")

    (if-tpl god
      (div
       (for [level (range 6)]
         (let [n (level-value-fn level)]
           (button :click #(e/click state :change-fn (fn [m] (+ m n))) n)))))

    (div :class "wrapper"

      ; (div :class "upgrade"
      ;   (table
      ;     (caption "Upgrade your tools")
      ;     (thead
      ;       (tr
      ;         (th "Thing")
      ;         (th "Cost")
      ;         (th "Boost")
      ;         (th "# Bought")
      ;         (th "")))
      ;         ;(upgrade-btn :level 1 :value 1)
      ;         ))

      (div :class "sell"
        (table
          (caption "Sell your words")
          (thead
            (tr
              (th "Thing")
              (th "Word cost")
              (th "Income")
              (th "# Sold")
              (th "")))
          (sell-buttons))))))
