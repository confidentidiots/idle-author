(page "index.html"
  (:require
    [clicker.engine :as e]
    [data.db :as d]
    [clojure.string :as string]))

(defc state { :clicks 0})
(defc god true)
(defn level-value-fn [n]
  (+
    (Math/pow n 4)
    (* 10 n)))

; sentinels
(defc= clicks (:clicks state))
(defc= add-every (:add-every state))
(defc= money (:money state))
; (defc= sell-log (:things state))
; (defc= upgrade-log (:things state)) ; TODO maybe just a single log

; (js/setInterval #(e/click (fn [m] (+ m @add-every))) 1000)

; upgrade: add-every go up by value in upgrade lookup
;       money go down by the value of the key in the upgrade lookup
; (defelem upgrade-btn
;   [{:keys [level value]} kids]
;   (let [text (d/tools level)
;       count 1 ;(cell= (upgrade-log level))
;       func-all (fn [] nil)
;       button-text (str text " ($" value ")")]

;       (tr
;         (td text)
;         (td "$" value)
;         (td level " words per second")
;         (td count)
;         (td
;           (button :disabled (cell= (> value money)) :click func-all "Buy" kids)))))

; sell: money go up by value in money lookup
;       words go down by the value of the key in the money lookup
(defelem sell-buttons [kids]
  (for [product (get-in d/data [:product :items])]
    (do
      (let [name (product :name)
      loss (product :cost)
      gain 99
      count 1 ;(cell= (sell-log level))
      func-all (fn [] nil)
      disabled (cell= (not (e/can-tap? state name)))]

      (tr
        (td name)
        (td loss)
        (td "$" gain )
        (td count)
        (td (button :disabled disabled :click func-all "Sell" kids))))
    ) ; do
    ))


(html
  (head
    (link :href "app.css" :rel "stylesheet" :type "text/css"))
  (body
    (h3 clicks " words")
    ; (h3 "$" money " income")
    ; (h5 "Creativity boost of " add-every " words every second")

    (button :click #(e/click state) "Write a word")

    (if-tpl god
      (div
      (for [level (range 6)]
        (let [n (level-value-fn level)]
          (button :click #(e/click state :change-fn (fn [m] (+ m n))) n)))))

    (div :class "wrapper"

      ; (div :class "upgrade"
      ;   (table
      ;     (caption "Upgrade your tools")
      ;     (thead
      ;       (tr
      ;         (th "Thing")
      ;         (th "Cost")
      ;         (th "Boost")
      ;         (th "# Bought")
      ;         (th "")))
      ;         ;(upgrade-btn :level 1 :value 1)
      ;         ))

      (div :class "sell"
        (table
          (caption "Sell your words")
          (thead
            (tr
              (th "Thing")
              (th "Word cost")
              (th "Income")
              (th "# Sold")
              (th "")))
            (sell-buttons ))
        )

              ) ; div.wrapper


    ))
